---
setup:
  - skip:
      features: headers

---
"Events":

  - do:
      ubi.create_store:
        store: mystore2
        index: ecommerce

  - do:
      cluster.health:
        index: [ubi_mystore2_events, ubi_mystore2_queries]
        wait_for_no_initializing_shards: true

  # With an empty timestamp
  - do:
      headers:
        query_id: "8075dcab-eb65-4fba-a23b-ffab060d477c"
        Content-Type: application/json
        Accept: application/json
      ubi.post_event:
        store: mystore2
        body: { "user_id": "2f355788-36a8-47f5-bc04-29b5d33faf36", "event": "query", "timestamp": "" }

  - match: { status: received }

  # With a timestamp
  - do:
      headers:
        query_id: "3c190085-477d-4daa-a243-8a1c5d2faf3a"
        Content-Type: application/json
        Accept: application/json
      ubi.post_event:
        store: mystore2
        body: { "user_id": "2f355788-36a8-47f5-bc04-29b5d33faf36", "event": "query", "timestamp": "1710700627" }

  - match: { status: received }

  # Without a timestamp field
  - do:
      headers:
        query_id: "5b646b32-6c5a-4ffb-b9dc-1b321ef9b8c9"
        Content-Type: application/json
        Accept: application/json
      ubi.post_event:
        store: mystore2
        body: { "user_id": "2f355788-36a8-47f5-bc04-29b5d33faf36", "event": "query" }

  - match: { status: received }

  # Without a query_id
  - do:
      headers:
        Content-Type: application/json
        Accept: application/json
      ubi.post_event:
        store: mystore2
        body: { "user_id": "2f355788-36a8-47f5-bc04-29b5d33faf36", "event": "query" }

  - match: { status: received }

  # With a non-existent store (does not throw an error)
  - do:
      headers:
        Content-Type: application/json
        Accept: application/json
      ubi.post_event:
        store: doesnotexist
        body: { "user_id": "2f355788-36a8-47f5-bc04-29b5d33faf36", "event": "query" }

  - match: { status: received }
