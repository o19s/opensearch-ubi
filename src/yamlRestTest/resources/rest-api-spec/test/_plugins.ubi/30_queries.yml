---
setup:
  - skip:
      features: headers

---
"Query":

  - do:
      indices.create:
        index: ecommerce

  - do:
      index:
        index: ecommerce
        id: "1"
        body: { foo: bar }

  - do:
      ubi.create_store:
        store: mystore
        index: ecommerce

  - do:
      cluster.health:
        index: [.mystore_events, .mystore_queries]
        wait_for_no_initializing_shards: true

  - do:
      indices.exists:
        index: .mystore_events

  - is_true: ''

  - do:
      indices.exists:
        index: .mystore_queries

  - is_true: ''

  # Search with a query ID
  - do:
      headers:
        X-ubi-store: "mystore"
        X-query-id: "784d3937-c36e-45d9-b083-e48eacabb8d8"
      search:
        rest_total_hits_as_int: true
        index: ecommerce
        body: "{ \"query\": { \"match_all\": {} } }"

  - gte: { took: 0 }
  - gte: { hits.total: 0 }
  - is_false: _clusters
  - is_true: _shards.total
  #- is_true: header.query_id
  #- match: { header.query_id: 5b646b32-6c5a-4ffb-b9dc-1b321ef9b8c9 }

  # Search without a query ID
  - do:
      headers:
        X-ubi-store: "mystore"
      search:
        rest_total_hits_as_int: true
        index: ecommerce
        body: "{ \"query\": { \"match_all\": {} } }"

  - gte: { took: 0 }
  - gte: { hits.total: 0 }
  - is_false: _clusters
  - is_true: _shards.total
  #- is_true: header.query_id
  #- match: { header.query_id: 5b646b32-6c5a-4ffb-b9dc-1b321ef9b8c9 }

---
"Query against an invalid UBI store":

  - do:
      indices.create:
        index: ecommerce

  - do:
      index:
        index: ecommerce
        id: "1"
        body: { foo: bar }

  - do:
      headers:
        X-ubi-store: "invalid"
      search:
        rest_total_hits_as_int: true
        index: ecommerce
        body: "{ \"query\": { \"match_all\": {} } }"

  - gte: { took: 0 }
  - gte: { hits.total: 0 }
  - is_false: _clusters
  - is_true: _shards.total
