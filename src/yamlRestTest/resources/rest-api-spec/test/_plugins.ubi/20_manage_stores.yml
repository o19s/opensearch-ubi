---
"Create and delete a UBI store":
# Create a UBI store, verify the indexes exist, then delete the store.

  - do:
      ubi.create_store:
        store: mystore
        index: ecommerce
        id_field: name

  - do:
      cluster.health:
        index: [.mystore_events, .mystore_queries]
        wait_for_no_initializing_shards: true

  - do:
      indices.exists:
        index: .mystore_events

  - is_true: ''

  - do:
      indices.exists:
        index: .mystore_queries

  - is_true: ''

  - do:
      ubi.get_stores: {}

  - match: { mystore }

  - do:
      ubi.delete_store:
        store: mystore

  - do:
      cluster.health:
        index: [.mystore_events, .mystore_queries]
        wait_for_no_initializing_shards: true

  - do:
      indices.get:
        index: .mystore_events, .mystore_queries
        ignore_unavailable: true
  - is_false: .mystore_events
  - is_false: .mystore_queries

---
"Create a store without specifying an index":
# An index is required to associate a UBI store with the index.

  - do:
      catch: bad_request
      ubi.create_store:
        store: some_store
        index: ""

---
"Create a store without specifying an id_field":
# A missing id_field is allowed - the doc ID will be used instead.

  - do:
      ubi.create_store:
        store: invalid_store
        index: some_index
        id_field: ""

---
"Delete a store that does not exist":
# Deleting a store that does not exist does not throw an exception.

  - do:
      ubi.delete_store:
        store: invalid_store

  - match: { status: deleted }

---
"Create a store that already exists":
# Creating a store that already exists does not throw an exception.

  - do:
      ubi.create_store:
        store: mystore
        index: ecommerce
        id_field: name

  - do:
      cluster.health:
        index: [.mystore_events, .mystore_queries]
        wait_for_no_initializing_shards: true

  - do:
      ubi.create_store:
        store: mystore
        index: ecommerce
        id_field: name

  - match: { status: initialized }
